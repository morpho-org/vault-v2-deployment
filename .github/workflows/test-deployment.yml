name: Test VaultV2 Deployment

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]
    paths:
      - 'script/**'
      - 'deploy_anvil.sh'
      - '.github/workflows/deploy.yml'

env:
  FOUNDRY_PROFILE: ci

jobs:
  test-deployment:
    name: Test VaultV2 Deployment on Anvil
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install curl
        run: |
          sudo apt-get update
          sudo apt-get install -y curl

      - name: Make deploy script executable
        run: |
          chmod +x deploy_anvil.sh

      - name: Test VaultV2 deployment on Anvil
        run: |
          echo "ðŸ§ª Starting VaultV2 deployment test on Anvil..."
          ./deploy_anvil.sh
          echo "âœ… VaultV2 deployment test completed successfully!"

      - name: Display test results
        if: success()
        run: |
          echo "ðŸ“‹ === DEPLOYMENT TEST SUMMARY ==="
          if [ -f ".env" ]; then
            echo "ðŸ“„ Test environment configuration:"
            cat .env
          fi
          echo "ðŸ“Š Test artifacts saved as GitHub Actions artifacts"

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-deployment-logs-${{ github.run_number }}
          path: |
            anvil.log
            .env
          retention-days: 7

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… **VaultV2 deployment test successful!**\n\nTest deployment on Anvil completed successfully. Test logs and configuration have been saved as artifacts.'
            })
